BTH545
Workshop 3
Armen Merzaian
060207024
amerzanian@myseneca.ca

Reflection

1. Explain how your interface prevents the user from making mistakes.

    Creating a good user interface, includes analyzing the user stories and revolving the GUI of the application around it.
    My application aligns with good UI principals by not only creating a flow that helps the user follow the steps of the
    form without explicitly describing the steps, but also preventing the user from making mistakes.
    The first mistake that a user could make is not filling in important information in the customer delivery information
    section. 

2. Explain how your interface design leads the user to fill in the information in a logical order.

    Because the layout of the application is vertical/linear, the user will naturally read from top to bottom without hesitation.
    This is also why the design sets the most important parts of the order at the top of the GUI.

3. Explain how you were able to detect mistakes before the form was submitted and how you
    notified the user that there were mistakes.

    When the user fills the address information, QT uses signals and slots to handle the event after the user un-focuses
    from a LineEdit widget. This means that the user doesn't need to attempt to submit the form before an error is communicated.
    Furthermore, the application must prevent the user from selecting a Large sized pizza, and extra cheese. Therefore, the
    application will disable the extra cheese checkbox when large is selected or visa versa. 
    Lastly, the application prevents the user from selecting more than 3 toppings, by disabling the additional options when
    three are selected.

4. Explain the techniques you used to focus attention on various parts of the interface.

    Each of the sections are separated by a QT GroupBox. Not only does this help me programmatically to iterate through
    child widget, but the GroupBox has a bordering line, and a heading which clearly separates the selections from other
    parts of the GUI.
    Furthermore, by using different input selection techniques (TextEdits, CheckBoxes, RadioButtons), we are able to communicate
    to the end user that like-widgets have similar functionality.
    Moreover, when displaying the summary of the order, the dialog box prevents the user from accessing the form GUI and the
    summary at the same time, which could prevent windows from being lost and perhaps breaking the flow of the application.
    Lastly, using colouful CTA buttons helps direct the user's eye to the HCI that is necessary for the next step.
